1. Check if prime
	Create a function named 'isPrime' that accepts an integer argument and returns true or false if the integer is prime or not.

	example :
		input : 2
		output : true (Successful)

		input : 4
		output : false (Failed)

2. Find the Even Occuring Element
   Create a function 'evenOccuringElement' that takes an integer array argument.  The integer array contains one element that occurs even number of times and all others have odd occurrences.  The function will return the element with even occurrences.

   example : 
   		input : [2,2,4,6,8,1,3,5]
   		output : [2,2]

3. Reverse Each Word
   Create a function, named 'reverse_each_word', that takes a sentence and returns it with each word reversed in place. 

   example :
   		input : Hello World!
   		output : !dlorw olleH

4. Factorial
   Create a function 'factorial' that takes an integer argument and returns the factorial of that integer.

   example :
   		input : 3
   		output : [1,2,3]

5. Determine the integer difference
	Write a function 'integer_difference' that accepts an array of random integers and an integer n. Determine the number of times where two integers in the array have the difference of n.

	Example 1:
	 n = 4
	 array = [1, 1, 5, 6, 9, 16, 27]

	The result should be 3 (Due to 2x [1, 5], and [5, 9])

	Example 2:
	 n = 2
	 array = [1, 1, 3, 3]

	The result should be 4 (Due to 4x [1, 3])

6. Find the longest words
   Write a function that returns the longest word(s) from a sentence. The function should not return any duplicate words.

	Examples:

	str1 = "You are just an old antidisestablishmentarian"
	result should be: ["antidisestablishmentarian"]

	str2 = "I gave a present to my parents"
	result should be: ["present", "parents"]

7. Find Missing Element
   There is an array of non-negative integers. A second array is formed by shuffling the elements of the first array and deleting a random element. Given these two arrays, find which element is missing in the second array. 

8. Queue
   Write a queue class. A queue is a data structure where elements are added at the end and removed from the front.

   example :
   		input: 1 2 3 4 5
   		output : 1 2 3 4 5

